var path=require("path"),axios=require("axios"),log=require("npmlog"),url=require("url"),AppConfig=require(path.join(__dirname,"../app-config"));const TAG="APIService";class APIService{constructor({baseURL:e,apiSubFolder:s}){this._axios=axios.create({baseURL:url.resolve(e,s),timeout:AppConfig.RPC_TIMEOUT})}getTag(){throw new Error("Not implemented!")}getAPIPath(e){return url.resolve(this._axios.defaults.baseURL,e)}apiPOST(e,s){return log.verbose(TAG,`apiPOST(): apiFilename=${e} payload=${JSON.stringify(s)}`),new Promise((t,r)=>{this._axios.post(e,s).then(e=>{t({status:!0,data:e.data})}).catch(a=>{a.response?(log.error(this.getTag(),`apiPOST(): apiPath=${this.getAPIPath(e)} `+`payload=${JSON.stringify(s)} err.response.status=${a.response.status} `+`err.response.statusText=${a.response.statusText} err.response.data=${JSON.stringify(a.response.data)})`),t({status:!1,errCode:a.response.status,errMessage:a.response.statusText,errData:a.response.data})):r(a)})})}apiGET(e,s=null){return log.verbose(TAG,`apiGET(): apiFilename=${e} params=${JSON.stringify(s)}`),new Promise((t,r)=>{this._axios.get(this.getAPIPath(e),{params:s}).then(e=>{t({status:!0,data:e.data})}).catch(s=>{s.response?(log.error(this.getTag(),`apiGET(): apiPath=${this.getAPIPath(e)} `+`err.response.status=${s.response.status} `+`err.response.statusText=${s.response.statusText} err.response.data=${JSON.stringify(s.response.data)})`),t({status:!1,errCode:s.response.status,errMessage:s.response.statusText,errData:s.response.data})):r(s)})})}}module.exports=APIService;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zZXJ2aWNlcy9hcGktc2VydmljZS5qcyJdLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsImF4aW9zIiwibG9nIiwidXJsIiwiQXBwQ29uZmlnIiwiam9pbiIsIl9fZGlybmFtZSIsIlRBRyIsIkFQSVNlcnZpY2UiLCJbb2JqZWN0IE9iamVjdF0iLCJiYXNlVVJMIiwiYXBpU3ViRm9sZGVyIiwidGhpcyIsIl9heGlvcyIsImNyZWF0ZSIsInJlc29sdmUiLCJ0aW1lb3V0IiwiUlBDX1RJTUVPVVQiLCJFcnJvciIsImFwaUZpbGVuYW1lIiwiZGVmYXVsdHMiLCJwYXlsb2FkIiwidmVyYm9zZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJQcm9taXNlIiwicmVqZWN0IiwicG9zdCIsInRoZW4iLCJyZXNwIiwic3RhdHVzIiwiZGF0YSIsImNhdGNoIiwiZXJyIiwicmVzcG9uc2UiLCJlcnJvciIsImdldFRhZyIsImdldEFQSVBhdGgiLCJlcnJDb2RlIiwiZXJyTWVzc2FnZSIsInN0YXR1c1RleHQiLCJlcnJEYXRhIiwicGFyYW1zIiwiZ2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsS0FBT0MsUUFBUSxRQUVmQyxNQUFRRCxRQUFRLFNBQ2hCRSxJQUFNRixRQUFRLFVBQ2RHLElBQU1ILFFBQVEsT0FFZEksVUFBWUosUUFBUUQsS0FBS00sS0FBS0MsVUFBVyxrQkFFN0MsTUFBTUMsSUFBTSxhQWFaLE1BQUFDLFdBR0VDLGFBQWFDLFFBQUNBLEVBQU9DLGFBQUVBLElBQ3JCQyxLQUFLQyxPQUFTWixNQUFNYSxPQUFPLENBQ3pCSixRQUFTUCxJQUFJWSxRQUFRTCxFQUFTQyxHQUM5QkssUUFBU1osVUFBVWEsY0FJdkJSLFNBQ0UsTUFBTSxJQUFJUyxNQUFNLG9CQUdsQlQsV0FBWVUsR0FDVixPQUFPaEIsSUFBSVksUUFBUUgsS0FBS0MsT0FBT08sU0FBU1YsUUFBU1MsR0FlbkRWLFFBQVNVLEVBQWFFLEdBRXBCLE9BREFuQixJQUFJb0IsUUFBUWYsOEJBQStCWSxhQUF1QkksS0FBS0MsVUFBVUgsTUFDMUUsSUFBSUksUUFBUSxDQUFDVixFQUFTVyxLQUMzQmQsS0FBS0MsT0FBT2MsS0FBS1IsRUFBYUUsR0FBU08sS0FBS0MsSUFDMUNkLEVBQVEsQ0FBQ2UsUUFBUSxFQUFNQyxLQUFNRixFQUFLRSxTQUNqQ0MsTUFBTUMsSUFDSEEsRUFBSUMsVUFDTmhDLElBQUlpQyxNQUFNdkIsS0FBS3dCLCtCQUFnQ3hCLEtBQUt5QixXQUFXbEIsaUJBQ2xESSxLQUFLQyxVQUFVSCwwQkFBZ0NZLEVBQUlDLFNBQVNKLHFDQUMzQ0csRUFBSUMsU0FBbUIsZ0NBQXdCWCxLQUFLQyxVQUFVUyxFQUFJQyxTQUFTSCxVQUN6R2hCLEVBQVEsQ0FBQ2UsUUFBUSxFQUFPUSxRQUFTTCxFQUFJQyxTQUFTSixPQUFRUyxXQUFZTixFQUFJQyxTQUFTTSxXQUFZQyxRQUFTUixFQUFJQyxTQUFTSCxRQUVqSEwsRUFBT08sT0FNZnhCLE9BQVFVLEVBQWF1QixFQUFTLE1BRTVCLE9BREF4QyxJQUFJb0IsUUFBUWYsNkJBQThCWSxZQUFzQkksS0FBS0MsVUFBVWtCLE1BQ3hFLElBQUlqQixRQUFRLENBQUNWLEVBQVNXLEtBQzNCZCxLQUFLQyxPQUFPOEIsSUFBSS9CLEtBQUt5QixXQUFXbEIsR0FBYyxDQUFDdUIsT0FBQUEsSUFBU2QsS0FBS0MsSUFFM0RkLEVBQVEsQ0FBQ2UsUUFBUSxFQUFNQyxLQUFNRixFQUFLRSxTQUNqQ0MsTUFBTUMsSUFDSEEsRUFBSUMsVUFDTmhDLElBQUlpQyxNQUFNdkIsS0FBS3dCLDhCQUErQnhCLEtBQUt5QixXQUFXbEIsNkJBQ3JDYyxFQUFJQyxTQUFTSixxQ0FDUkcsRUFBSUMsU0FBbUIsZ0NBQXdCWCxLQUFLQyxVQUFVUyxFQUFJQyxTQUFTSCxVQUN6R2hCLEVBQVEsQ0FBQ2UsUUFBUSxFQUFPUSxRQUFTTCxFQUFJQyxTQUFTSixPQUFRUyxXQUFZTixFQUFJQyxTQUFTTSxXQUFZQyxRQUFTUixFQUFJQyxTQUFTSCxRQUVqSEwsRUFBT08sUUFPakJXLE9BQU9DLFFBQVVyQyIsImZpbGUiOiJzZXJ2aWNlcy9hcGktc2VydmljZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5cbnZhciBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJylcbnZhciBsb2cgPSByZXF1aXJlKCducG1sb2cnKVxudmFyIHVybCA9IHJlcXVpcmUoJ3VybCcpXG5cbnZhciBBcHBDb25maWcgPSByZXF1aXJlKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9hcHAtY29uZmlnJykpXG5cbmNvbnN0IFRBRyA9ICdBUElTZXJ2aWNlJ1xuXG4vKlxuICBBbGwgR0VUL1BPU1QgcmVxdWVzdHMgc2hvdWxkIGdvIHRocm91Z2ggdGhpcyBjbGFzcyB0byBoYXZlXG4gIHVuaWZpZWQgYm9pbGVycGxhdGUgaGFuZGxpbmcuXG5cbiAgQWxsIFJFU1QgQVBJIGNhbGxzIHJldHVybiBlaXRoZXI6XG4gICB7c3RhdHVzOiB0cnVlLCBkYXRhOiBbT2JqZWN0XX0pXG4gICAgIG9yXG4gICB7c3RhdHVzOiBmYWxzZSwgZXJyQ29kZTogW0ludGVnZXIsIEhUVFAgZXJyb3IgY29kZSBmcm9tIGJhY2tlbmRdLCBlcnJNZXNzYWdlOiBbU3RyaW5nLCBIVFRQIGVycm9yIHN0YXR1cyBmcm9tIGJhY2tlbmRdfVxuXG4gIEluIGNhc2Ugb2Ygb3RoZXIgZXJyb3IsIGEgcmVqZWN0ZWQgcHJvbWlzZSBpcyByZXR1cm5lZFxuKi9cbmNsYXNzIEFQSVNlcnZpY2Uge1xuICAvLyBhcGlTdWJGb2xkZXI6IHN1YmZvbGRlciBwYXRoIGZvciB0aGUgQVBJXG4gIC8vIGkuZS4gL2FwaS92MS9jbGllbnRcbiAgY29uc3RydWN0b3IgKHtiYXNlVVJMLCBhcGlTdWJGb2xkZXJ9KSB7XG4gICAgdGhpcy5fYXhpb3MgPSBheGlvcy5jcmVhdGUoe1xuICAgICAgYmFzZVVSTDogdXJsLnJlc29sdmUoYmFzZVVSTCwgYXBpU3ViRm9sZGVyKSxcbiAgICAgIHRpbWVvdXQ6IEFwcENvbmZpZy5SUENfVElNRU9VVFxuICAgIH0pXG4gIH1cblxuICBnZXRUYWcgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignTm90IGltcGxlbWVudGVkIScpXG4gIH1cblxuICBnZXRBUElQYXRoIChhcGlGaWxlbmFtZSkge1xuICAgIHJldHVybiB1cmwucmVzb2x2ZSh0aGlzLl9heGlvcy5kZWZhdWx0cy5iYXNlVVJMLCBhcGlGaWxlbmFtZSlcbiAgfVxuXG4gIC8qXG4gICAgUmV0dXJuOlxuICAgICAge3N0YXR1czogdHJ1ZSwgZGF0YTogLi4uIH1cbiAgICAgIG9yXG4gICAgICB7c3RhdHVzOiBmYWxzZSwgZXJyQ29kZTogNDAwLCBlcnJNZXNzYWdlOiAnQkFEIFJFUVVFU1QnLCBlcnJEYXRhOiAnVXNlcm5hbWUgaXMgYWxyZWFkeSB1c2VkJ31cblxuICAgIFByb21pc2UgcmVqZWN0aW9uIG9uIG90aGVyIGVycm9yLlxuXG4gICAgQ29udmVudGlvbjpcbiAgICAgIHN0YXR1czogdHJ1ZSBpcyByZXR1cm5lZCBpZiB0aGUgaW50ZW5kZWQgb3BlcmF0aW9uIGlzIHN1Y2Nlc3NmdWwuIChlLmcuIHJlZ2lzdHJhdGlvbiBpcyBzdWNjZXNzZnVsKVxuICAgICAgICAgICAgICBpbiBvdGhlciB3b3JkcywgdHJ1ZSBtZWFucyBVSSBzaG91bGQgcmVuZGVyICdzdWNjZXNzJywgZmFsc2UgbWVhbnMgVUkgc2hvdWxkIHJlbmRlciAnZXJyb3InXG4gICovXG4gIGFwaVBPU1QgKGFwaUZpbGVuYW1lLCBwYXlsb2FkKSB7XG4gICAgbG9nLnZlcmJvc2UoVEFHLCBgYXBpUE9TVCgpOiBhcGlGaWxlbmFtZT0ke2FwaUZpbGVuYW1lfSBwYXlsb2FkPSR7SlNPTi5zdHJpbmdpZnkocGF5bG9hZCl9YClcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdGhpcy5fYXhpb3MucG9zdChhcGlGaWxlbmFtZSwgcGF5bG9hZCkudGhlbihyZXNwID0+IHtcbiAgICAgICAgcmVzb2x2ZSh7c3RhdHVzOiB0cnVlLCBkYXRhOiByZXNwLmRhdGF9KVxuICAgICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgaWYgKGVyci5yZXNwb25zZSkge1xuICAgICAgICAgIGxvZy5lcnJvcih0aGlzLmdldFRhZygpLCBgYXBpUE9TVCgpOiBhcGlQYXRoPSR7dGhpcy5nZXRBUElQYXRoKGFwaUZpbGVuYW1lKX0gYCArXG4gICAgICAgICAgICBgcGF5bG9hZD0ke0pTT04uc3RyaW5naWZ5KHBheWxvYWQpfSBlcnIucmVzcG9uc2Uuc3RhdHVzPSR7ZXJyLnJlc3BvbnNlLnN0YXR1c30gYCArXG4gICAgICAgICAgICBgZXJyLnJlc3BvbnNlLnN0YXR1c1RleHQ9JHsoZXJyLnJlc3BvbnNlLnN0YXR1c1RleHQpfSBlcnIucmVzcG9uc2UuZGF0YT0keyhKU09OLnN0cmluZ2lmeShlcnIucmVzcG9uc2UuZGF0YSkpfSlgKVxuICAgICAgICAgIHJlc29sdmUoe3N0YXR1czogZmFsc2UsIGVyckNvZGU6IGVyci5yZXNwb25zZS5zdGF0dXMsIGVyck1lc3NhZ2U6IGVyci5yZXNwb25zZS5zdGF0dXNUZXh0LCBlcnJEYXRhOiBlcnIucmVzcG9uc2UuZGF0YX0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVqZWN0KGVycilcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgYXBpR0VUIChhcGlGaWxlbmFtZSwgcGFyYW1zID0gbnVsbCkge1xuICAgIGxvZy52ZXJib3NlKFRBRywgYGFwaUdFVCgpOiBhcGlGaWxlbmFtZT0ke2FwaUZpbGVuYW1lfSBwYXJhbXM9JHtKU09OLnN0cmluZ2lmeShwYXJhbXMpfWApXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuX2F4aW9zLmdldCh0aGlzLmdldEFQSVBhdGgoYXBpRmlsZW5hbWUpLCB7cGFyYW1zfSkudGhlbihyZXNwID0+IHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coQ2lyY3VsYXJKU09OLnN0cmluZ2lmeShyZXNwKSlcbiAgICAgICAgcmVzb2x2ZSh7c3RhdHVzOiB0cnVlLCBkYXRhOiByZXNwLmRhdGF9KVxuICAgICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgaWYgKGVyci5yZXNwb25zZSkge1xuICAgICAgICAgIGxvZy5lcnJvcih0aGlzLmdldFRhZygpLCBgYXBpR0VUKCk6IGFwaVBhdGg9JHt0aGlzLmdldEFQSVBhdGgoYXBpRmlsZW5hbWUpfSBgICtcbiAgICAgICAgICAgIGBlcnIucmVzcG9uc2Uuc3RhdHVzPSR7ZXJyLnJlc3BvbnNlLnN0YXR1c30gYCArXG4gICAgICAgICAgICBgZXJyLnJlc3BvbnNlLnN0YXR1c1RleHQ9JHsoZXJyLnJlc3BvbnNlLnN0YXR1c1RleHQpfSBlcnIucmVzcG9uc2UuZGF0YT0keyhKU09OLnN0cmluZ2lmeShlcnIucmVzcG9uc2UuZGF0YSkpfSlgKVxuICAgICAgICAgIHJlc29sdmUoe3N0YXR1czogZmFsc2UsIGVyckNvZGU6IGVyci5yZXNwb25zZS5zdGF0dXMsIGVyck1lc3NhZ2U6IGVyci5yZXNwb25zZS5zdGF0dXNUZXh0LCBlcnJEYXRhOiBlcnIucmVzcG9uc2UuZGF0YX0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVqZWN0KGVycilcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQVBJU2VydmljZVxuIl19
